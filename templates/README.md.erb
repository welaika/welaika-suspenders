# <%= app_name.humanize %>

## Getting Started

To install Ruby, read the [rbenv guide](https://github.com/rbenv/rbenv#installation)

To install Postgres:

    $ brew install postgresql@10

To install Node:

    $ brew install node

(or use [nvm](https://github.com/creationix/nvm) if you want).

To update Node:

    $ npm install npm@latest -g

To install Yarn:

    $ brew install yarn

To install Chromedriver (for integration test):

    $ brew cask install chromedriver

To install ImageMagick (delete if not applicable):

    $ brew install imagemagick@6

Now, clone this repo and you are ready to run the setup script:

    % ./bin/setup

You can run the application using [Heroku Local](https://devcenter.heroku.com/articles/heroku-local):

    $ heroku local

Run the quality checks and the tests suite:

    $ rake

## Setup on Heroku (delete if not applicable):

### Database

https://elements.heroku.com/addons/heroku-postgresql

Choose the PostgreSQL version you want to use (e.g. 10):

    $ heroku addons:create heroku-postgresql:hobby-dev --version=10 --remote=staging
    $ heroku addons:create heroku-postgresql:hobby-dev --version=10 --remote=production

Further reading:

https://devcenter.heroku.com/articles/heroku-postgres-plans

### Logs

https://elements.heroku.com/addons/logentries

    $ heroku addons:create logentries:le_tryit --remote=staging
    $ heroku addons:create logentries:le_tryit --remote=production

### Cronjobs (if you need them):

https://elements.heroku.com/addons/scheduler

    $ https://elements.heroku.com/addons/scheduler

### Sentry

For Sentry's release detection to work correctly, please run

    $ heroku labs:enable runtime-dyno-metadata

### Redis (if you need for Sidekiq):

https://elements.heroku.com/addons/heroku-redis

    $ heroku addons:create heroku-redis:hobby-dev

## Gitlab Docker Image

We use a customer Docker image for our gitlab CI.

You can read more about submitting a new image version [here](https://gitlab.com/welaika/<%= app_name %>/container_registry).

Since our `Dockerfile` is called `Dockerfile.gitlab`, the commands are slightly different:


```bash
$ docker build -f Dockerfile.gitlab -t registry.gitlab.com/welaika/<%= app_name %> .
$ docker push registry.gitlab.com/welaika/<%= app_name %>
```

Eventually, you can lint Dockerfiles with [hadolint](https://github.com/hadolint/hadolint)
